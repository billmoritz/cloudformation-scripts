{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Build a Traildash EC2 Instance with and Instance Profile attached.",
    "Parameters": {
        "VpcId": {
            "Description": "VPC the Subnet is in",
            "Type": "AWS::EC2::VPC::Id"
        },
        "SubnetId": {
            "Description": "Subnet to bring up the Traildash",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "Password": {
            "Description": "Password that is assigned to the Traildash ubuntu user",
            "Type": "String",
            "NoEcho": "true",
            "MinLength": "8",
            "MaxLength": "30",
            "ConstraintDescription": "must be between 8-30 characters."
        },
        "AssignEIP": {
            "Description": "Should the Traildash get and Elastic IP",
            "Type": "String",
            "Default": "False",
            "AllowedValues": [
                "True",
                "False"
            ]
        },
        "InstanceType": {
            "Description": "Traildash EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "SgCidr": {
            "Description": " The IP address range that can be used to access to Traildash",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "IamInstanceProfile": {
            "Description": " The IAM Instance Profile to assign to the Traildash",
            "Type": "String"
        },
        "QueueURL": {
            "Description": " The SQS Queue URL for Cloudtrail file processing",
            "Type": "String"
        },
        "S3Bucket": {
            "Description": "S3 Bucket that holds the Cloudtrail logs",
            "Type": "String"
        }
    },
    "Conditions": {
        "CreateEIP": {
            "Fn::Equals": [
                {
                    "Ref": "AssignEIP"
                },
                "True"
            ]
        }
    },
    "Mappings": {
        "AWSInstanceType2Arch": {
            "t1.micro": {
                "Arch": "PV64"
            },
            "t2.micro": {
                "Arch": "HVM64"
            },
            "t2.small": {
                "Arch": "HVM64"
            },
            "t2.medium": {
                "Arch": "HVM64"
            },
            "m1.small": {
                "Arch": "PV64"
            }
        },
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "PV64": "ami-4baddd21",
                "HVM64": "ami-78abdb12"
            },
            "us-west-2": {
                "PV64": "ami-5a3d293b",
                "HVM64": "ami-6e37230f"
            },
            "us-west-1": {
                "PV64": "ami-9ce18dfc",
                "HVM64": "ami-0ce08c6c"
            },
            "eu-west-1": {
                "PV64": "ami-f7e33c84",
                "HVM64": "ami-92e03fe1"
            },
            "eu-central-1": {
                "PV64": "ami-1b4a5977",
                "HVM64": "ami-3c4b5850"
            },
            "ap-northeast-1": {
                "PV64": "ami-180b2e76",
                "HVM64": "ami-6214310c"
            },
            "ap-southeast-1": {
                "PV64": "ami-f7bf7894",
                "HVM64": "ami-f6bf7895"
            },
            "ap-southeast-2": {
                "PV64": "ami-02d38c61",
                "HVM64": "ami-acd58acf"
            },
            "sa-east-1": {
                "PV64": "ami-1008b07c",
                "HVM64": "ami-1308b07f"
            },
            "cn-north-1": {
                "PV64": "ami-5864f861",
                "HVM64": "ami-a664f89f"
            },
            "us-gov-west-1": {
                "PV64": "ami-a8bad88b",
                "HVM64": "ami-b0bad893"
            }
        }
    },
    "Resources": {
        "TraildashSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security Group for Traildash",
                "VpcId": {
                    "Ref": "VpcId"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SgCidr"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": {
                            "Ref": "SgCidr"
                        }
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Ref": "SgCidr"
                        }
                    }
                ]
            }
        },
        "TraildashIP": {
            "Condition": "CreateEIP",
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "InstanceId": {
                    "Ref": "Traildash"
                }
            }
        },
        "Traildash": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref": "InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "TraildashSG"
                    }
                ],
                "SubnetId": {
                    "Ref": "SubnetId"
                },
                "IamInstanceProfile": {
                    "Ref": "IamInstanceProfile"
                },
                "Monitoring": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#cloud-config\n",
                                "package_upgrade: true\n",
                                "password: ",
                                {
                                    "Ref": "Password"
                                },
                                "\n",
                                "chpasswd: { expire: False }\n",
                                "ssh_pwauth: True\n",
                                "apt_sources:\n",
                                " - source: \"deb https://apt.dockerproject.org/repo ubuntu-wily main\"\n",
                                "   keyid: 58118E89F3A912897C070ADBF76221572C52609D\n",
                                "   filename: docker.list\n",
                                "   keyserver: pgp.mit.edu\n",
                                "packages:\n",
                                " - docker-engine\n",
                                " - python-pip\n",
                                " - htop\n",
                                "runcmd:\n",
                                " - pip install boto3\n",
                                " - service docker start\n",
                                " - docker run -i -d -p 80:7000 -e 'AWS_SQS_URL=",
                                {
                                    "Ref": "QueueURL"
                                },
                                "' -e 'AWS_REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "' -e 'DEBUG=1' -v /home/traildash:/var/lib/elasticsearch/ --name traildash appliedtrust/traildash\n",
                                " - wget -q -O backfill.py https://raw.githubusercontent.com/AppliedTrust/traildash/master/backfill.py\n",
                                " - chmod 755 backfill.py\n",
                                " - AWS_S3_BUCKET=",
                                {
                                    "Ref": "S3Bucket"
                                },
                                " AWS_SQS_URL=",
                                {
                                    "Ref": "QueueURL"
                                },
                                " AWS_DEFAULT_REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                " ./backfill.py\n"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {}
}
